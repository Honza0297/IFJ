 t=htab_init(size)         konstruktor: vytvoření a inicializace tabulky

        t=htab_move(newsize,t2)   move konstruktor: vytvoření a inicializace
                                  tabulky daty z tabulky t2,
                                  t2 nakonec zůstane prázdná a alokovaná
                                  (tuto funkci cvičně použijte v programu)

        size_t s=htab_size(t)           vrátí počet prvků tabulky (.size)

        size_t c=htab_bucket_count(t)   vrátí počet prvků pole (.arr_size)

        ptr=htab_lookup_add(t,key)    vyhledávání - viz dále

        ptr=htab_find(t,key)          vyhledávání - viz dále

        htab_foreach(t,func)      volání funkce func pro každý prvek

        b=htab_remove(t,key)      vyhledání a zrušení zadané položky
                                  vrací b==false pokud neexistuje

        htab_clear(t)             zrušení všech položek, tabulka zůstane prázdná

        htab_free(t)              destruktor: zrušení tabulky (volá htab_clear())

      kde t,t2    je ukazatel na tabulku (typu htab_t *),
          b       je typu bool,
          ptr     je ukazatel na záznam (položku tabulky),
          func    je funkce s parametry: func(constkey,valueptr)

    - Vhodně zvolte typy parametrů funkcí.

    - Záznam [key,data,next] je typu
          struct htab_listitem
      a obsahuje položky:
          key .... ukazatel na dynamicky alokovaný řetězec,
          data ... počet výskytů a
          next ... ukazatel na další záznam

    - Funkce  htab_foreach(t,function)  volá zadanou funkci pro každý prvek
      tabulky, obsah tabulky nemění. (Vhodné např. pro tisk obsahu.)

    - Funkce
        struct htab_listitem * htab_lookup_add(htab_t *t, const char *key);
      V tabulce  t  vyhledá záznam odpovídající řetězci  key  a
        - pokud jej nalezne, vrátí ukazatel na záznam
        - pokud nenalezne, automaticky přidá záznam a vrátí ukazatel
      Poznámka: Dobře promyslete chování této funkce k parametru key.

        struct htab_listitem * htab_find(htab_t *t, const char *key);
      Totéž jako htab_lookup_add, ale bez alokace záznamu:
        - pokud nenalezne, vrací NULL
